一 状态栏工具类的使用
1.地址https://github.com/gyf-dev/ImmersionBar
2.使用时候的初始化说明:
                 ImmersionBar.with(this)
                 .transparentStatusBar()  //透明状态栏，不写默认透明色
                 .transparentNavigationBar()  //透明导航栏，不写默认黑色(设置此方法，fullScreen()方法自动为true)
                 .transparentBar()             //透明状态栏和导航栏，不写默认状态栏为透明色，导航栏为黑色（设置此方法，fullScreen()方法自动为true）
                 .statusBarColor(R.color.colorPrimary)     //状态栏颜色，不写默认透明色
                 .navigationBarColor(R.color.colorPrimary) //导航栏颜色，不写默认黑色
                 .barColor(R.color.colorPrimary)  //同时自定义状态栏和导航栏颜色，不写默认状态栏为透明色，导航栏为黑色
                 .statusBarAlpha(0.3f)  //状态栏透明度，不写默认0.0f
                 .navigationBarAlpha(0.4f)  //导航栏透明度，不写默认0.0F
                 .barAlpha(0.3f)  //状态栏和导航栏透明度，不写默认0.0f
                 .statusBarDarkFont(true)   //状态栏字体是深色，不写默认为亮色
                 .flymeOSStatusBarFontColor(R.color.btn3)  //修改flyme OS状态栏字体颜色
                 .fullScreen(true)      //有导航栏的情况下，activity全屏显示，也就是activity最下面被导航栏覆盖，不写默认非全屏
                 .hideBar(BarHide.FLAG_HIDE_BAR)  //隐藏状态栏或导航栏或两者，不写默认不隐藏
                 .addViewSupportTransformColor(toolbar)  //设置支持view变色，可以添加多个view，不指定颜色，默认和状态栏同色，还有两个重载方法
                 .titleBar(view)    //解决状态栏和布局重叠问题，任选其一
                 .statusBarView(view)  //解决状态栏和布局重叠问题，任选其一
                 .fitsSystemWindows(true)    //解决状态栏和布局重叠问题，任选其一，默认为false，当为true时一定要指定statusBarColor()，不然状态栏为透明色
                 .supportActionBar(true) //支持ActionBar使用
                 .statusBarColorTransform(R.color.orange)  //状态栏变色后的颜色
                 .navigationBarColorTransform(R.color.orange) //导航栏变色后的颜色
                 .barColorTransform(R.color.orange)  //状态栏和导航栏变色后的颜色
                 .removeSupportView(toolbar)  //移除指定view支持
                 .removeSupportAllView() //移除全部view支持
                 .addTag("tag")  //给以上设置的参数打标记
                 .getTag("tag")  //根据tag获得沉浸式参数
                 .reset()  //重置所以沉浸式参数
                 .keyboardEnable(true)  //解决软键盘与底部输入框冲突问题，默认为false
                 .setOnKeyboardListener(new OnKeyboardListener() {    //软键盘监听回调
                   @Override
                   public void onKeyboardChange(boolean isPopup, int keyboardHeight) {
                       LogUtils.e(isPopup);  //isPopup为true，软键盘弹出，为false，软键盘关闭
                   }
              })
                 .keyboardMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE)  //单独指定软键盘模式
                 .init();  //必须调用方可沉浸式


二 CalendarView 的全部xml特性如下：
                 <declare-styleable name="CalendarView">

                         <attr name="calendar_padding" format="dimension" /><!--日历内部左右padding-->

                         <attr name="month_view" format="color" /> <!--自定义类日历月视图路径-->
                         <attr name="week_view" format="string" /> <!--自定义类周视图路径-->
                         <attr name="week_bar_height" format="dimension" /> <!--星期栏的高度-->
                         <attr name="week_bar_view" format="color" /> <!--自定义类周栏路径，通过自定义则 week_text_color week_background xml设置无效，当仍可java api设置-->
                         <attr name="week_line_margin" format="dimension" /><!--线条margin-->

                         <attr name="week_line_background" format="color" /><!--线条颜色-->
                         <attr name="week_background" format="color" /> <!--星期栏的背景-->
                         <attr name="week_text_color" format="color" /> <!--星期栏文本颜色-->
                         <attr name="week_text_size" format="dimension" /><!--星期栏文本大小-->

                         <attr name="current_day_text_color" format="color" /> <!--今天的文本颜色-->
                         <attr name="current_day_lunar_text_color" format="color" /><!--今天的农历文本颜色-->

                         <attr name="calendar_height" format="string" /> <!--日历每项的高度，56dp-->
                         <attr name="day_text_size" format="string" /> <!--天数文本大小-->
                         <attr name="lunar_text_size" format="string" /> <!--农历文本大小-->

                         <attr name="scheme_text" format="string" /> <!--标记文本-->
                         <attr name="scheme_text_color" format="color" /> <!--标记文本颜色-->
                         <attr name="scheme_month_text_color" format="color" /> <!--标记天数文本颜色-->
                         <attr name="scheme_lunar_text_color" format="color" /> <!--标记农历文本颜色-->

                         <attr name="scheme_theme_color" format="color" /> <!--标记的颜色-->

                         <attr name="selected_theme_color" format="color" /> <!--选中颜色-->
                         <attr name="selected_text_color" format="color" /> <!--选中文本颜色-->
                         <attr name="selected_lunar_text_color" format="color" /> <!--选中农历文本颜色-->

                         <attr name="current_month_text_color" format="color" /> <!--当前月份的字体颜色-->
                         <attr name="other_month_text_color" format="color" /> <!--其它月份的字体颜色-->

                         <attr name="current_month_lunar_text_color" format="color" /> <!--当前月份农历节假日颜色-->
                         <attr name="other_month_lunar_text_color" format="color" /> <!--其它月份农历节假日颜色-->

                         <!-- 年视图相关 -->
                         <attr name="year_view_month_text_size" format="dimension" /> <!-- 年视图月份字体大小 -->
                         <attr name="year_view_day_text_size" format="dimension" /> <!-- 年视图月份日期字体大小 -->
                         <attr name="year_view_month_text_color" format="color" /> <!-- 年视图月份字体颜色 -->
                         <attr name="year_view_day_text_color" format="color" /> <!-- 年视图日期字体颜色 -->
                         <attr name="year_view_scheme_color" format="color" /> <!-- 年视图标记颜色 -->

                         <attr name="min_year" format="integer" />  <!--最小年份1900-->
                         <attr name="max_year" format="integer" />  <!--最大年份2099-->
                         <attr name="min_year_month" format="integer" /> <!--最小年份对应月份-->
                         <attr name="max_year_month" format="integer" /> <!--最大年份对应月份-->

                         <!--月视图是否可滚动-->
                         <attr name="month_view_scrollable" format="boolean" />
                         <!--周视图是否可滚动-->
                         <attr name="week_view_scrollable" format="boolean" />
                         <!--年视图是否可滚动-->
                         <attr name="year_view_scrollable" format="boolean" />

                         <!--配置你喜欢的月视图显示模式模式-->
                         <attr name="month_view_show_mode">
                              <enum name="mode_all" value="0" /> <!--全部显示-->
                              <enum name="mode_only_current" value="1" /> <!--仅显示当前月份-->
                              <enum name="mode_fix" value="2" /> <!--自适应显示，不会多出一行，但是会自动填充-->
                         </attr>

                         <!-- 自定义周起始 -->
                         <attr name="week_start_with">
                              <enum name="sun" value="1" />
                              <enum name="mon" value="2" />
                              <enum name="sat" value="7" />
                         </attr>

                         <!-- 自定义选择模式 -->
                         <attr name="select_mode">
                               <enum name="default_mode" value="0" />
                               <enum name="single_mode" value="1" />
                               <enum name="range_mode" value="2" />
                               <enum name="multi_mode" value="3" />
                         </attr>

                         <!-- when select_mode = multi_mode -->
                         <attr name="max_multi_select_size" format="integer" />

                         <!-- 当 select_mode=range_mode -->
                         <attr name="min_select_range" format="integer" />
                         <attr name="max_select_range" format="integer" />
                 </declare-styleable>